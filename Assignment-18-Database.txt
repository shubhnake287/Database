					Assignment – 18 

				Maintaining the Integrity of your Data. 
1) Create a table called Cityorders. This will contain the same onum, amt and snum fields as the Orders table, 
and the same cnum and city fields as the Customers table, so that each customer’s order will be entered into this
table along with his or her city. Onum will be the primary key of Cityorders. All of the fields in Cityorders 
will be constrained to match the Customers and Orders tables. Assume the parent keys in these tables already have 
the proper constraints. 

Ans->
create table Cityorders
as 
select * fdescrom  orders;
alter table Cityorders
	add primary key (onum);

ALTER TABLE Cityorders
ADD FOREIGN KEY (onum) REFERENCES orders (onum);

ALTER TABLE  Cityorders
ADD FOREIGN KEY (cnum) REFERENCES customers (cnum);

alter table orders 
	add primary key (onum);
alter table customers
	add primary key (cnum );


Or create table cityorders
(
 onum int(4) primary key,
 snum int(4),
 amt int(4),
 cnum int(4),
 city char(10),
constraint fk_onum foreign key(onum) references orders(onum),
constraint fk_cnum foreign key(cnum) references customers(cnum)
 );
create table orders                                              
(
 onum int(4) primary key,
 snum int(4),
 amt int(4)
);
create table customers
(
 cnum int(4) primary key,
 city char(10)
);
desc cityorders;




2) Redefine the Orders table as follows:- add a new column called prev, which will identify, for each order, the
 onum of the previous order for that current customer. Implement this with a foreign key referring to the Orders 
table itself. The foreign key should refer as well to the cnum of the customer, providing a definite enforced link
 between the current order and the one referenced. 
Ans->

alter table orders add prev int(4);
alter table orders add constraint fk_prev foreign key(prev) references orders(onum);
alter table orders add constraint fk_cprev foreign key(prev) references customers(cnum);

